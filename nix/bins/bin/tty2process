#!/usr/bin/env bash
# Usage: tty2process <ty>
#   tty: Specify tty to check for process name.
# Returns: "[icon] [process_name]"

tty=$1

# Construct process tree.
children=();
while read -r pid ppid; do
  [[ -n $pid && pid -ne ppid ]] && children[ppid]+=" $pid"
done <<< "$(ps -e -o pid= -o ppid=)"

# Get all descendant pids of processes in $tty with BFS
idx=0
IFS=$'\n' read -r -d '' -a pids < <(ps -o pid= -t "$tty" && printf '\0')
while (( ${#pids[@]} > idx )); do
  pid=${pids[idx++]}; pids+=( ${children[pid]-} )
done

commands=$(ps -o comm= -p ${pids[@]})

for cmd in $commands
do
    case "$cmd" in
      nvim)
        echo " nvim"
        exit 0
        ;;
    esac
done

for cmd in $commands
do
    case "$cmd" in
      node)
        echo "󰎙 node"
        exit 0
        ;;
    esac
done

NAME=$(echo "$commands" | grep -E --invert-match "fish|\(open\)" | head -1)

if [[ $NAME = "" ]]; then
 echo " fish"
 exit 0
fi

LABEL=""
if [ ${#NAME} -gt 10 ]; then
  BASE=$(basename "$NAME")
  LABEL="${BASE:0:10}"
else
  LABEL="$NAME"
fi

echo "$(icons "$NAME") $LABEL"
