# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# 'exec-and-forget borders active_color=0x8567c0e0 inactive_color=0x00494d64 width=7 style=round blur_radius=0 hidpi=on',

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 0

# Possible values: tiles|accordion
default-root-container-layout = 'accordion'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 8
inner.vertical =   8
outer.left =       16
outer.bottom =     16
outer.top =        16
outer.right =      16

# See https://nikitabobko.github.io/AeroSpace/guide#exec-env-vars
[exec]                   # Again, you don't need to copy all config sections to your config.
inherit-env-vars = true  # If you don't touch "exec" section,
[exec.env-vars]          # it will fallback to "default-config.toml"
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'
alt-space = 'layout accordion tiles'
alt-shift-f = 'fullscreen'


# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-c = 'exec-and-forget open -b company.thebrowser.Browser'
# alt-c = 'exec-and-forget open -b app.zen-browser.zen'
alt-d = 'workspace D'
alt-f = 'exec-and-forget open -b com.figma.Desktop'
# alt-i = 'exec-and-forget open -b net.kovidgoyal.kitty'
alt-i = 'exec-and-forget open -b com.mitchellh.ghostty'
alt-m = 'exec-and-forget open -b com.apple.mail'
alt-n = 'exec-and-forget open -b notion.id'
alt-o = 'exec-and-forget open -b md.obsidian'
alt-p = 'exec-and-forget open -b com.cron.electron'
alt-s = 'exec-and-forget open -b com.tinyspeck.slackmacgap'
alt-t = 'exec-and-forget open -b com.TickTick.task.mac'
alt-u = 'exec-and-forget open -b com.github.th-ch.youtube-music'
alt-w = 'exec-and-forget open -b net.whatsapp.WhatsApp'
alt-z = 'exec-and-forget open -b us.zoom.xos'
alt-v = 'workspace V'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'
alt-shift-6 = 'move-node-to-workspace 6'
alt-shift-7 = 'move-node-to-workspace 7'
alt-shift-8 = 'move-node-to-workspace 8'
alt-shift-9 = 'move-node-to-workspace 9'
alt-shift-a = 'move-node-to-workspace A'
alt-shift-b = 'move-node-to-workspace B'
alt-shift-c = 'move-node-to-workspace C'
alt-shift-d = 'move-node-to-workspace D'
alt-shift-e = 'move-node-to-workspace E'
# alt-shift-f = 'move-node-to-workspace F'
alt-shift-g = 'move-node-to-workspace G'
alt-shift-i = 'move-node-to-workspace I'
alt-shift-m = 'move-node-to-workspace M'
alt-shift-n = 'move-node-to-workspace N'
alt-shift-o = 'move-node-to-workspace O'
alt-shift-p = 'move-node-to-workspace P'
alt-shift-q = 'move-node-to-workspace Q'
# alt-shift-r = 'move-node-to-workspace R'
alt-shift-s = 'move-node-to-workspace S'
alt-shift-t = 'move-node-to-workspace T'
alt-shift-u = 'move-node-to-workspace U'
alt-shift-v = 'move-node-to-workspace V'
alt-shift-w = 'move-node-to-workspace W'
alt-shift-x = 'move-node-to-workspace X'
alt-shift-y = 'move-node-to-workspace Y'
alt-shift-z = 'move-node-to-workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'
alt-shift-r = 'reload-config'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']
# f = ['fullscreen', 'mode main'] # Toggle between floating and tiling layout

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
# if.app-id = 'net.kovidgoyal.kitty'
if.app-id = 'com.mitchellh.ghostty'
# check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace I']

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
# if.app-id = 'app.zen-browser.zen'
# check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace C']

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
# check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace W']

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
# check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace S']

[[on-window-detected]]
if.app-id = 'com.cron.electron'
# check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace P']

[[on-window-detected]]
if.app-id = 'com.apple.mail'
# check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace M']

[[on-window-detected]]
if.app-id = 'us.zoom.xos'
# check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace Z']

[[on-window-detected]]
if.app-id = 'md.obsidian'
# check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace O']

[[on-window-detected]]
if.app-id = 'com.figma.Desktop'
# check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace F']

[[on-window-detected]]
if.app-id = 'com.github.th-ch.youtube-music'
# check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace U']

[[on-window-detected]]
if.app-id = 'notion.id'
# check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace N']

[[on-window-detected]]
if.app-name-regex-substring = 'mpv'
check-further-callbacks = true
run = ['layout floating']  
